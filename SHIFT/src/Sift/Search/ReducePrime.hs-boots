module Sift.Search.ReducePrime where

import Rift qualified
import Sift.Core.Monad

reduceCyclic :: (Rift.Term (Rift.TermOf e), Rift.Theory e) => (Rift.Inner (Rift.TermOf e) ~ (Rift.TermOf e)) => (Rift.TermOf e) -> LogicM e (Rift.TermOf e) (Rift.TermOf e)
reduceRecCyclic :: (Rift.Term (Rift.TermOf e), Eq (Rift.TermOf e), Show (Rift.TermOf e), Rift.RTerm (Rift.TermOf e), Rift.Theory e) => (Rift.Inner (Rift.TermOf e) ~ (Rift.TermOf e)) => (Rift.TermOf e) -> LogicM e (Rift.TermOf e) (Rift.TermOf e)
