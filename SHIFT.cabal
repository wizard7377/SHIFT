cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.37.0.
--
-- see: https://github.com/sol/hpack

name:           SHIFT
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/githubuser/SHIFT#readme>
homepage:       https://github.com/wizard7377/SHIFT#readme
bug-reports:    https://github.com/wizard7377/SHIFT/issues
author:         Asher Frost
maintainer:     example@example.com
copyright:      2025 Asher Frost
license:        BSD-2-Clause
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    CHANGELOG.md
extra-doc-files:
    docs/MetaLamed.md

source-repository head
  type: git
  location: https://github.com/wizard7377/SHIFT

flag check
  manual: False
  default: False

flag dev
  manual: False
  default: False

flag release
  manual: False
  default: False

flag sanity
  manual: False
  default: False

library
  exposed-modules:
      Rift
      Sift
      Lift
      Hift
      Extra
      Tests
  other-modules:
      Extra.Basics
      Extra.Boolean
      Extra.Choice
      Extra.ChoiceOld
      Extra.Debug
      Extra.Decide
      Extra.Error
      Extra.Lens
      Extra.List
      Extra.Map
      Extra.Monad
      Extra.Ops
      Extra.Todo
      Extra.Tree
      Extra.Tuple
      Extra.Types
      Hift.Hift
      Hift.Opts
      Hift.Opts.Forms
      Hift.Opts.Types
      Hift.Query
      Lift.Core
      Lift.Core.Forms
      Lift.Core.Forms.Axiom
      Lift.Core.Forms.Message
      Lift.Core.Forms.Module
      Lift.Core.Forms.Proof
      Lift.Core.Monad
      Lift.Core.Monad.Monad
      Lift.Core.Monad.Parse
      Lift.Core.Monad.Symbol
      Lift.Core.ParseEnv
      Lift.Core.Source
      Lift.Core.Source.Core
      Lift.Core.Symbol
      Lift.Core.Symbol.SymbolTable
      Lift.Core.Symbol.Types
      Lift.Core.Symbol.Typeset
      Lift.Dift
      Lift.Mift
      Lift.Mift.Common
      Lift.Mift.Lexer
      Lift.Mift.Parser
      Lift.Mift.Types
      Lift.Pift
      Rift.Core
      Rift.Core.Base
      Rift.Core.Dev
      Rift.Core.Dev.Forms
      Rift.Core.Dev.Paeno
      Rift.Core.Dev.Parser
      Rift.Core.Dev.Util
      Rift.Core.Instances
      Rift.Core.Kernel
      Rift.Core.Ops
      Rift.Core.Ops.Mem
      Rift.Core.Unify
      Rift.Core.Unify.Base
      Rift.Core.Unify.Infer
      Rift.Core.Unify.Util
      Rift.Core.UnifyNew.Base
      Rift.Core.UnifyNew.Unify
      Rift.Core.Utility
      Rift.Forms
      Rift.Forms.Language
      Rift.Forms.LogicEnv
      Rift.Forms.LogicRes
      Rift.Forms.Proof
      Rift.Forms.Proof.Abstract
      Rift.Forms.Proof.Types
      Rift.Forms.Search
      Rift.Forms.Theory
      Sift.Base
      Sift.Dev
      Sift.Dev.Util
      Sift.Monad
      Sift.Solver
      Sift.Solver.Search
      Sift.Solver.Types
      Tests.Mem
      Tests.Searching
      Tests.Unify
      Paths_SHIFT
  autogen-modules:
      Paths_SHIFT
  hs-source-dirs:
      src
  other-extensions:
      AllowAmbiguousTypes
      FunctionalDependencies
      PatternGuards
      OverloadedStrings
      LambdaCase
      QuantifiedConstraints
      PartialTypeSignatures
      TemplateHaskell
      UndecidableInstances
      ConstraintKinds
      MonoLocalBinds
      Arrows
  build-depends:
      HUnit
    , HaTeX
    , List
    , QuickCheck
    , ansi-terminal
    , array
    , base >=4.7 && <5
    , binary
    , comonad
    , containers
    , criterion
    , data-default
    , deepseq
    , extra
    , lens
    , megaparsec
    , monad-loops
    , mtl
    , optparse-applicative
    , prettyprinter
    , tasty
    , tasty-hunit
    , template-haskell
    , text
  default-language: GHC2021
  if flag(sanity) && (!flag(dev))
    ghc-options: -O0 -fdefer-typed-holes -Wtyped-holes -W -Wno-duplicate-exports -Wno-unused-imports -Wno-unused-local-binds -Wno-unused-matches -Wno-dodgy-imports -Wno-dodgy-exports
  if flag(dev) && (!flag(release))
    ghc-options: -fdefer-typed-holes -fdefer-type-errors -w -Wno-typed-holes -Wdeferred-type-errors -Wdeferred-out-of-scope-variables -fprof-auto -g2
  if flag(dev) && flag(release)
    ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -fdefer-typed-holes
  if flag(release)
    ghc-options: -w -O2

executable SHIFT-exe
  main-is: Main.hs
  other-modules:
      Paths_SHIFT
  autogen-modules:
      Paths_SHIFT
  hs-source-dirs:
      app
  other-extensions:
      AllowAmbiguousTypes
      FunctionalDependencies
      PatternGuards
      OverloadedStrings
      LambdaCase
      QuantifiedConstraints
      PartialTypeSignatures
      TemplateHaskell
      UndecidableInstances
      ConstraintKinds
      MonoLocalBinds
      Arrows
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      HUnit
    , HaTeX
    , List
    , QuickCheck
    , SHIFT
    , ansi-terminal
    , array
    , base >=4.7 && <5
    , binary
    , comonad
    , containers
    , criterion
    , data-default
    , deepseq
    , extra
    , lens
    , megaparsec
    , monad-loops
    , mtl
    , optparse-applicative
    , prettyprinter
    , tasty
    , tasty-hunit
    , template-haskell
    , text
  default-language: GHC2021
  if flag(sanity) && (!flag(dev))
    ghc-options: -O0 -fdefer-typed-holes -Wtyped-holes -W -Wno-duplicate-exports -Wno-unused-imports -Wno-unused-local-binds -Wno-unused-matches -Wno-dodgy-imports -Wno-dodgy-exports
  if flag(dev) && (!flag(release))
    ghc-options: -fdefer-typed-holes -fdefer-type-errors -w -Wno-typed-holes -Wdeferred-type-errors -Wdeferred-out-of-scope-variables -fprof-auto -g2
  if flag(dev) && flag(release)
    ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -fdefer-typed-holes
  if flag(release)
    ghc-options: -w -O2

test-suite SHIFT-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      GenSearch
      Paths_SHIFT
  autogen-modules:
      Paths_SHIFT
  hs-source-dirs:
      test
  other-extensions:
      AllowAmbiguousTypes
      FunctionalDependencies
      PatternGuards
      OverloadedStrings
      LambdaCase
      QuantifiedConstraints
      PartialTypeSignatures
      TemplateHaskell
      UndecidableInstances
      ConstraintKinds
      MonoLocalBinds
      Arrows
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      HUnit
    , HaTeX
    , List
    , QuickCheck
    , SHIFT
    , ansi-terminal
    , array
    , base >=4.7 && <5
    , binary
    , comonad
    , containers
    , criterion
    , data-default
    , deepseq
    , extra
    , lens
    , megaparsec
    , monad-loops
    , mtl
    , optparse-applicative
    , prettyprinter
    , tasty
    , tasty-hunit
    , template-haskell
    , text
  default-language: GHC2021
  if flag(sanity) && (!flag(dev))
    ghc-options: -O0 -fdefer-typed-holes -Wtyped-holes -W -Wno-duplicate-exports -Wno-unused-imports -Wno-unused-local-binds -Wno-unused-matches -Wno-dodgy-imports -Wno-dodgy-exports
  if flag(dev) && (!flag(release))
    ghc-options: -fdefer-typed-holes -fdefer-type-errors -w -Wno-typed-holes -Wdeferred-type-errors -Wdeferred-out-of-scope-variables -fprof-auto -g2
  if flag(dev) && flag(release)
    ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -fdefer-typed-holes
  if flag(release)
    ghc-options: -w -O2

benchmark SHIFT-perf
  type: exitcode-stdio-1.0
  main-is: Bench.hs
  other-modules:
      Paths_SHIFT
  autogen-modules:
      Paths_SHIFT
  hs-source-dirs:
      perf
  other-extensions:
      AllowAmbiguousTypes
      FunctionalDependencies
      PatternGuards
      OverloadedStrings
      LambdaCase
      QuantifiedConstraints
      PartialTypeSignatures
      TemplateHaskell
      UndecidableInstances
      ConstraintKinds
      MonoLocalBinds
      Arrows
  ghc-options: -threaded -rtsopts -with-rtsopts=-N -O2
  build-depends:
      HUnit
    , HaTeX
    , List
    , QuickCheck
    , SHIFT
    , ansi-terminal
    , array
    , base >=4.7 && <5
    , binary
    , comonad
    , containers
    , criterion
    , data-default
    , deepseq
    , extra
    , lens
    , megaparsec
    , monad-loops
    , mtl
    , optparse-applicative
    , prettyprinter
    , tasty
    , tasty-hunit
    , template-haskell
    , text
  default-language: GHC2021
  if flag(sanity) && (!flag(dev))
    ghc-options: -O0 -fdefer-typed-holes -Wtyped-holes -W -Wno-duplicate-exports -Wno-unused-imports -Wno-unused-local-binds -Wno-unused-matches -Wno-dodgy-imports -Wno-dodgy-exports
  if flag(dev) && (!flag(release))
    ghc-options: -fdefer-typed-holes -fdefer-type-errors -w -Wno-typed-holes -Wdeferred-type-errors -Wdeferred-out-of-scope-variables -fprof-auto -g2
  if flag(dev) && flag(release)
    ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -fdefer-typed-holes
  if flag(release)
    ghc-options: -w -O2
